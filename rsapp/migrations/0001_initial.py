# Generated by Django 5.0.6 on 2024-05-13 06:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('building_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Название здания')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес здания')),
                ('total_area', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общая площадь помещений')),
                ('total_rooms', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общее количество помещений')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('surname', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('middlename', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('photo', models.ImageField(default='/static/images/photo_not_found.jpg', null=True, upload_to='userphotos/%Y-%m-%d/<django.db.models.fields.AutoField>/')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100, verbose_name='Название категории платежа')),
            ],
        ),
        migrations.CreateModel(
            name='RentalAgreement',
            fields=[
                ('agreement_id', models.AutoField(primary_key=True, serialize=False)),
                ('monthly_payment', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма ежемесячных выплат')),
                ('start_date', models.DateField(verbose_name='Дата заключения соглашения')),
                ('end_date', models.DateField(verbose_name='Дата завершения соглашения')),
                ('payment_date', models.DateField(verbose_name='Дата списания ежемесячного арендного платежа')),
            ],
        ),
        migrations.CreateModel(
            name='SpaceStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=50, verbose_name='Статус помещения')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('tenant_id', models.AutoField(primary_key=True, serialize=False)),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия арендатора')),
                ('name', models.CharField(max_length=100, verbose_name='Имя арендатора')),
                ('middlename', models.CharField(max_length=100, null=True, verbose_name='Отчество арендатора')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта арендатора')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона арендатора')),
                ('organization_name', models.CharField(max_length=200, verbose_name='Наименование организации')),
                ('ogrn', models.CharField(max_length=13, verbose_name='ОГРН организации')),
                ('inn', models.CharField(max_length=12, verbose_name='ИНН организации')),
                ('passport_series', models.CharField(max_length=4, verbose_name='Серия паспорта арендатора')),
                ('passport_number', models.CharField(max_length=6, verbose_name='Номер паспорта арендатора')),
                ('bank_bik', models.CharField(max_length=9, verbose_name='БИК банка')),
                ('bank_account', models.CharField(max_length=20, verbose_name='Расчетный счёт банка')),
                ('total_payments', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Общая сумма выплат')),
                ('rental_debt', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Текущая задолженность по арендным платежам')),
                ('maintenance_debt', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Текущая задолженность по обслуживанию помещений')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rsapp.employee')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма платежа')),
                ('payment_date', models.DateField(verbose_name='Дата платежа')),
                ('payment_file', models.FileField(blank=True, null=True, upload_to='payments/', verbose_name='Копия платежа')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsapp.paymentcategory', verbose_name='Категория договора')),
                ('rental_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsapp.rentalagreement')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('signing_date', models.DateField(verbose_name='Дата подписания договора')),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='contracts/', verbose_name='Копия договора')),
                ('status', models.CharField(max_length=50, verbose_name='Статус договора')),
                ('rental_agreement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rsapp.rentalagreement')),
            ],
        ),
        migrations.CreateModel(
            name='RentalSpace',
            fields=[
                ('rental_space_id', models.AutoField(primary_key=True, serialize=False)),
                ('area', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Площадь помещения')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание помещения')),
                ('floor', models.IntegerField(verbose_name='Этаж')),
                ('number', models.CharField(max_length=10, verbose_name='Номер помещения')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsapp.building')),
                ('curator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curated_spaces', to=settings.AUTH_USER_MODEL, verbose_name='Куратор помещения')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsapp.spacestatus')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rented_spaces', to='rsapp.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='rentalagreement',
            name='rental_space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsapp.rentalspace'),
        ),
        migrations.CreateModel(
            name='MaintenanceBill',
            fields=[
                ('bill_id', models.AutoField(primary_key=True, serialize=False)),
                ('gas_bill', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Счет за газ')),
                ('electricity_bill', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Счет за электричество')),
                ('water_bill', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Счет за воду')),
                ('heating_bill', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Счет за отопление')),
                ('repair_bill', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Счет за ремонтные работы')),
                ('creation_date', models.DateField(verbose_name='Дата создания счёта')),
                ('rental_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsapp.rentalspace')),
            ],
        ),
        migrations.AddField(
            model_name='rentalagreement',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsapp.tenant'),
        ),
    ]
